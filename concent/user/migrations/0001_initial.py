# Generated by Django 3.0.5 on 2020-04-20 11:49

from django.db import migrations, models
import multiselectfield.db.fields
import user.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('concert', '__first__'),
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('username', models.CharField(max_length=31, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('preferred_genres', multiselectfield.db.fields.MultiSelectField(choices=[('BalRnB', 'Ballad/RnB'), ('Dance', 'Dance'), ('RockInd', 'Rock/Indie'), ('HipElec', 'Hiphop/Elec'), ('Others', 'Jazz/Trot/Folk'), ('Foreign', 'Foreign')], max_length=43, null=True)),
                ('region', models.CharField(choices=[('Seoul', 'Seoul'), ('Gyeonggi', 'Gyeonggi'), ('Gangwon', 'Gangwon'), ('Chungcheong', 'Chungcheong'), ('Gyeongsang', 'Gyeongsang'), ('Jeolla', 'Jeolla'), ('Jeju', 'Jeju')], max_length=15, null=True, verbose_name='User Address Region')),
                ('artists', models.ManyToManyField(to='concert.Artist', verbose_name='Bookmarked Artists')),
                ('concerts', models.ManyToManyField(to='concert.Concert', verbose_name='Bookmarked Concerts')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', user.models.UserManager()),
            ],
        ),
    ]
